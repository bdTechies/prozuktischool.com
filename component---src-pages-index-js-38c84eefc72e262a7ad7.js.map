{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/views/layouts/MainLayout.js","webpack:///./src/views/layouts/ArticleLayout.js","webpack:///./src/components/PostListing/index.jsx"],"names":["Index","render","postEdges","this","props","data","allMarkdownRemark","edges","title","maxWidth","margin","config","siteTitle","limit","Component","pageQuery","MainLayout","children","theme","dark","name","content","siteDescription","ArticleLayout","padding","xs","sm","PostListing","getPostList","postList","forEach","postEdge","index","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","language","splice","mx","flexWrap","map","post","key","width","px","py","to","React"],"mappings":"0PASMA,E,gLACJC,OAAA,WACE,IAAMC,EAAYC,KAAKC,MAAMC,KAAKC,kBAAkBC,MACpD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAcC,MAAM,oBACpB,kBAAC,IAAD,CAAKC,SAAU,IAAKC,OAAO,UACzB,kBAAC,IAAD,CAAQF,MAAOG,IAAOC,YACtB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaV,UAAWA,EAAWW,MAAO,O,GAVhCC,aAiBLd,YAGR,IAAMe,EAAS,c,4JCpBhBC,E,gLACJf,OAAA,WAAU,IACAgB,EAAad,KAAKC,MAAlBa,SACR,OACE,kBAAC,IAAD,CAAeC,MAAOC,KACpB,kBAAC,IAAD,MACA,oCACE,kBAAC,IAAD,KACE,0BAAMC,KAAK,cAAcC,QAASV,IAAOW,mBAE3C,kBAAC,IAAD,MACCL,EACD,kBAAC,IAAD,S,GAZeH,aAmBVE,O,+LCzBf,IAMeO,EANO,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAab,E,oIAAhB,wBACpB,kBAAC,IAAD,eAAKK,SAAU,IAAKC,OAAO,SAASc,QAAS,CAAEC,GAAI,EAAGC,GAAI,IAAStB,GAChEa,I,oGCDCU,E,wLACJC,YAAA,WACE,IAAIC,EAAW,GACThB,EAAQV,KAAKC,MAAMS,MAgBzB,OAfAV,KAAKC,MAAMF,UAAU4B,SAAQ,SAACC,EAAUC,GACtCH,EAASI,KAAK,CACZC,KAAMH,EAASI,KAAKC,OAAOC,KAC3BC,KAAMP,EAASI,KAAKI,YAAYD,KAChCE,MAAOT,EAASI,KAAKI,YAAYC,MACjChC,MAAOuB,EAASI,KAAKI,YAAY/B,MACjCiC,KAAMV,EAASI,KAAKC,OAAOK,KAC3BC,QAASX,EAASI,KAAKO,QACvBC,WAAYZ,EAASI,KAAKQ,WAC1BC,SAAUb,EAASI,KAAKI,YAAYK,cAGpC/B,IACFgB,EAAWA,EAASgB,OAAO,EAAGhC,IAEzBgB,G,EAGT5B,OAAA,WACE,IAAM4B,EAAW1B,KAAKyB,cAEtB,OACE,kBAAC,IAAD,CAAMkB,GAAI,CAAC,GAAI,GAAIC,SAAS,QAGxBlB,EAASmB,KAAI,SAACC,GAAD,OACX,kBAAC,IAAD,CAAKC,IAAKD,EAAKzC,MAAO2C,MAAO,CAAC,EAAG,EAAI,GAAIC,GAAI,EAAGC,GAAI,GAClD,kBAAC,OAAD,CAAMC,GAAIL,EAAKf,MACb,kBAAC,IAAD,CAAaU,SAAUK,EAAKL,UAAWK,EAAKzC,c,GAhClC+C,IAAMzC,WA0CjBa","file":"component---src-pages-index-js-38c84eefc72e262a7ad7.js","sourcesContent":["import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport { MainLayout } from '../views/layouts';\nimport { HeroSection, SectionTitle } from '../views/components';\nimport PostListing from '../components/PostListing';\nimport { Box, SEO } from '../views/components';\nimport config from '../../data/SiteConfig';\n\nclass Index extends Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <MainLayout>\n        <HeroSection />\n        <SectionTitle title=\"সাম্প্রতিক লেখা\" />\n        <Box maxWidth={960} margin=\"0 auto\">\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <PostListing postEdges={postEdges} limit={6} />\n        </Box>\n      </MainLayout>\n    );\n  }\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n            language\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { ThemeProvider } from 'styled-components';\nimport { dark, light } from '../../views/styles/themes';\nimport { Link } from 'gatsby';\nimport config from '../../../data/SiteConfig';\nimport GlobalStyle from '../../views/styles/GlobalStyles';\nimport { Footer, MainMenu, Text } from '../../views/components';\n\nclass MainLayout extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <ThemeProvider theme={dark}>\n        <GlobalStyle />\n        <>\n          <Helmet>\n            <meta name=\"description\" content={config.siteDescription} />\n          </Helmet>\n          <MainMenu />\n          {children}\n          <Footer />\n        </>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default MainLayout;\n","import React from 'react';\nimport { Box } from '../components';\n\nconst ArticleLayout = ({ children, ...props }) => (\n  <Box maxWidth={960} margin=\"0 auto\" padding={{ xs: 3, sm: 4 }} {...props}>\n    {children}\n  </Box>\n);\n\nexport default ArticleLayout;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { SummaryCard, Box, Flex } from '../../views/components';\n\nclass PostListing extends React.Component {\n  getPostList() {\n    let postList = [];\n    const limit = this.props.limit;\n    this.props.postEdges.forEach((postEdge, index) => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n        language: postEdge.node.frontmatter.language,\n      });\n    });\n    if (limit) {\n      postList = postList.splice(0, limit);\n    }\n    return postList;\n  }\n\n  render() {\n    const postList = this.getPostList();\n\n    return (\n      <Flex mx={[0, -2]} flexWrap=\"wrap\">\n        {\n          /* Your post list here. */\n          postList.map((post) => (\n            <Box key={post.title} width={[1, 1 / 3]} px={3} py={3}>\n              <Link to={post.path}>\n                <SummaryCard language={post.language}>{post.title}</SummaryCard>\n              </Link>\n            </Box>\n          ))\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}