{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/views/layouts/MainLayout.js","webpack:///./src/views/layouts/ArticleLayout.js","webpack:///./src/components/PostListing/index.jsx"],"names":["Index","render","postEdges","this","props","data","allMarkdownRemark","edges","title","maxWidth","margin","config","siteTitle","limit","Component","pageQuery","connect","theme","children","variant","themes","name","content","SiteConfig","siteDescription","p","xs","sm","minHeight","ArticleLayout","padding","PostListing","getPostList","postList","forEach","postEdge","index","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","language","splice","mx","flexWrap","map","post","key","width","px","py","to","React"],"mappings":"iRASMA,E,gLACJC,OAAA,WACE,IAAMC,EAAYC,KAAKC,MAAMC,KAAKC,kBAAkBC,MACpD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAcC,MAAM,oBACpB,kBAAC,IAAD,CAAKC,SAAU,IAAKC,OAAO,UACzB,kBAAC,IAAD,CAAQF,MAAOG,IAAOC,YACtB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaV,UAAWA,EAAWW,MAAO,O,GAVhCC,aAiBLd,YAGR,IAAMe,EAAS,c,4KCUPC,iBAJS,SAAC,GAAD,MAAiB,CACvCC,MADsB,EAAGN,OACXM,SAGDD,EA7BI,SAACZ,GAAW,IACrBc,EAAkCd,EAAlCc,SAAUD,EAAwBb,EAAxBa,MADU,EACcb,EAAjBe,eADG,MACO,GADP,EAG5B,OACE,kBAAC,IAAD,CAAeF,MAAOG,EAAOH,EAAMI,OACjC,kBAAC,IAAD,MACA,oCACE,kBAAC,IAAD,KACE,0BAAMA,KAAK,cAAcC,QAASC,IAAWC,mBAE/C,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEf,SAAsB,UAAZU,EAAsB,IAAM,OACtCT,OAAO,SACPe,EAAe,UAAZN,EAAsB,CAAEO,GAAI,EAAGC,GAAI,GAAM,EAC5CC,UAAU,QAETV,GAEH,kBAAC,IAAD,Y,+LC1BR,IAMeW,EANO,SAAC,GAAD,IAAGX,EAAH,EAAGA,SAAad,E,oIAAhB,wBACpB,kBAAC,IAAD,eAAKK,SAAU,IAAKC,OAAO,SAASoB,QAAS,CAAEJ,GAAI,EAAGC,GAAI,IAASvB,GAChEc,I,oGCDCa,E,wLACJC,YAAA,WACE,IAAIC,EAAW,GACPpB,EAAUV,KAAKC,MAAfS,MAgBR,OAfAV,KAAKC,MAAMF,UAAUgC,SAAQ,SAACC,EAAUC,GACtCH,EAASI,KAAK,CACZC,KAAMH,EAASI,KAAKC,OAAOC,KAC3BC,KAAMP,EAASI,KAAKI,YAAYD,KAChCE,MAAOT,EAASI,KAAKI,YAAYC,MACjCpC,MAAO2B,EAASI,KAAKI,YAAYnC,MACjCqC,KAAMV,EAASI,KAAKC,OAAOK,KAC3BC,QAASX,EAASI,KAAKO,QACvBC,WAAYZ,EAASI,KAAKQ,WAC1BC,SAAUb,EAASI,KAAKI,YAAYK,cAGpCnC,IACFoB,EAAWA,EAASgB,OAAO,EAAGpC,IAEzBoB,G,EAGThC,OAAA,WACE,IAAMgC,EAAW9B,KAAK6B,cAEtB,OACE,kBAAC,IAAD,CAAMkB,GAAI,CAAC,GAAI,GAAIC,SAAS,QAGxBlB,EAASmB,KAAI,SAACC,GAAD,OACX,kBAAC,IAAD,CAAKC,IAAKD,EAAK7C,MAAO+C,MAAO,CAAC,EAAG,EAAI,GAAIC,GAAI,EAAGC,GAAI,GAClD,kBAAC,OAAD,CAAMC,GAAIL,EAAKf,MACb,kBAAC,IAAD,CAAaU,SAAUK,EAAKL,UAAWK,EAAK7C,c,GAhClCmD,IAAM7C,WA0CjBiB","file":"component---src-pages-index-js-7300f4d60fe1f87e5f56.js","sourcesContent":["import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Link, graphql } from 'gatsby';\nimport { MainLayout } from '../views/layouts';\nimport { HeroSection, SectionTitle } from '../views/components';\nimport PostListing from '../components/PostListing';\nimport { Box, SEO } from '../views/components';\nimport config from '../../data/SiteConfig';\n\nclass Index extends Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <MainLayout>\n        <HeroSection />\n        <SectionTitle title=\"সাম্প্রতিক লেখা\" />\n        <Box maxWidth={960} margin=\"0 auto\">\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <PostListing postEdges={postEdges} limit={6} />\n        </Box>\n      </MainLayout>\n    );\n  }\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n            language\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { ThemeProvider } from 'styled-components';\nimport { connect } from 'react-redux';\nimport SiteConfig from '../../../data/SiteConfig';\nimport { Box, Footer, MainMenu } from '../components';\nimport * as themes from '../styles/themes';\nimport GlobalStyle from '../styles/GlobalStyles';\nimport '../styles/themes/material-oceanic.css';\n\nconst MainLayout = (props) => {\n  const { children, theme, variant = '' } = props;\n\n  return (\n    <ThemeProvider theme={themes[theme.name]}>\n      <GlobalStyle />\n      <>\n        <Helmet>\n          <meta name=\"description\" content={SiteConfig.siteDescription} />\n        </Helmet>\n        <MainMenu />\n        <Box\n          maxWidth={variant === 'fixed' ? 960 : '100%'}\n          margin=\"0 auto\"\n          p={variant === 'fixed' ? { xs: 3, sm: 4 } : 0}\n          minHeight=\"70vh\"\n        >\n          {children}\n        </Box>\n        <Footer />\n      </>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = ({ config }) => ({\n  theme: config.theme,\n});\n\nexport default connect(mapStateToProps)(MainLayout);\n","import React from 'react';\nimport { Box } from '../components';\n\nconst ArticleLayout = ({ children, ...props }) => (\n  <Box maxWidth={960} margin=\"0 auto\" padding={{ xs: 3, sm: 4 }} {...props}>\n    {children}\n  </Box>\n);\n\nexport default ArticleLayout;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { SummaryCard, Box, Flex } from '../../views/components';\n\nclass PostListing extends React.Component {\n  getPostList() {\n    let postList = [];\n    const { limit } = this.props;\n    this.props.postEdges.forEach((postEdge, index) => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n        language: postEdge.node.frontmatter.language,\n      });\n    });\n    if (limit) {\n      postList = postList.splice(0, limit);\n    }\n    return postList;\n  }\n\n  render() {\n    const postList = this.getPostList();\n\n    return (\n      <Flex mx={[0, -2]} flexWrap=\"wrap\">\n        {\n          /* Your post list here. */\n          postList.map((post) => (\n            <Box key={post.title} width={[1, 1 / 3]} px={3} py={3}>\n              <Link to={post.path}>\n                <SummaryCard language={post.language}>{post.title}</SummaryCard>\n              </Link>\n            </Box>\n          ))\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}