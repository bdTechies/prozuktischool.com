{"version":3,"sources":["webpack://prozuktischool/./src/views/layouts/MainLayout.js","webpack://prozuktischool/./src/views/layouts/ArticleLayout.js","webpack://prozuktischool/./src/views/pages/Series/index.js"],"names":["connect","theme","config","props","children","variant","themes","name","content","SiteConfig","maxWidth","margin","p","xs","sm","mt","minHeight","data","allMarkdownRemark","postNodes","edges","seriesInfo","group","pageTitle","fieldValue","pagePath","convertNumbers","totalCount"],"mappings":"0NAwCA,KAAeA,SAJS,SAAC,GAAD,MAAiB,CACvCC,MADsB,EAAGC,OACXD,SAGhB,EA9BmB,SAACE,GAAW,IACrBC,EAAkCD,EAAlCC,SAAUH,EAAwBE,EAAxBF,MADU,EACcE,EAAjBE,eADG,MACO,GADP,EAG5B,OACE,wBAAC,KAAD,CAAeJ,MAAOK,EAAOL,EAAMM,OACjC,wBAAC,IAAD,MACA,gDACE,wBAAC,IAAD,KACE,gCAAMA,KAAK,cAAcC,QAASC,uBAEpC,wBAAC,KAAD,MACA,wBAAC,KAAD,CACEC,SAAsB,UAAZL,EAAsB,IAAM,OACtCM,OAAO,SACPC,EAAe,UAAZP,EAAsB,CAAEQ,GAAI,EAAGC,GAAI,GAAM,EAC5CC,GAAI,GACJC,UAAU,QAETZ,GAEH,wBAAC,KAAD,Y,iICpBR,EAPsB,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAaD,GAAhB,8BACpB,wBAAC,KAAD,eAAKO,SAAU,IAAKC,OAAO,SAASC,EAAG,CAAEC,GAAI,EAAGC,GAAI,IAASX,GAC1DC,EACD,wBAAC,KAAD,Q,0HCgDJ,UA/CmB,SAAC,GAAD,QACjBa,KACEC,kBAA4BC,EAFb,EAEMC,MAAyBC,EAF/B,EAEwBC,MAFxB,OAKjB,wBAAC,IAAD,CAAYjB,QAAQ,SAClB,wBAAC,KAAD,CACEkB,UAAWF,EAAW,GAAGG,WACzBC,SAAQ,WAAa,IAAUJ,EAAW,GAAGG,YAArC,MAEV,wBAAC,KAAD,CAAMnB,QAAQ,MAAd,UACagB,EAAW,GAAGG,WAD3B,MAC0CE,OACtCL,EAAW,GAAGM,YAFlB,UAKA,wBAAC,KAAD,CAAUR,UAAWA","file":"component---src-views-pages-series-index-js-62b27b472b6ca093173c.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { ThemeProvider } from 'styled-components';\nimport { connect } from 'react-redux';\nimport SiteConfig from '../../../data/SiteConfig';\nimport { Box, Footer, MainMenu } from '../components';\nimport * as themes from '../styles/themes';\nimport GlobalStyle from '../styles/GlobalStyles';\nimport '../styles/themes/material-oceanic.css';\n\nconst MainLayout = (props) => {\n  const { children, theme, variant = '' } = props;\n\n  return (\n    <ThemeProvider theme={themes[theme.name]}>\n      <GlobalStyle />\n      <>\n        <Helmet>\n          <meta name=\"description\" content={SiteConfig.siteDescription} />\n        </Helmet>\n        <MainMenu />\n        <Box\n          maxWidth={variant === 'fixed' ? 960 : '100%'}\n          margin=\"0 auto\"\n          p={variant === 'fixed' ? { xs: 3, sm: 4 } : 0}\n          mt={48}\n          minHeight=\"70vh\"\n        >\n          {children}\n        </Box>\n        <Footer />\n      </>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = ({ config }) => ({\n  theme: config.theme,\n});\n\nexport default connect(mapStateToProps)(MainLayout);\n","import React from 'react';\nimport { Box, BackToTopButton } from '../components';\n\nconst ArticleLayout = ({ children, ...props }) => (\n  <Box maxWidth={960} margin=\"0 auto\" p={{ xs: 3, sm: 4 }} {...props}>\n    {children}\n    <BackToTopButton />\n  </Box>\n);\n\nexport default ArticleLayout;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { convertNumbers } from 'bn-number-utils';\nimport { kebabCase } from 'lodash';\nimport { MainLayout } from '../../layouts';\nimport { PostList, SEO, Text } from '../../components';\n\nconst SeriesPage = ({\n  data: {\n    allMarkdownRemark: { edges: postNodes, group: seriesInfo },\n  },\n}) => (\n  <MainLayout variant=\"fixed\">\n    <SEO\n      pageTitle={seriesInfo[0].fieldValue}\n      pagePath={`/series/${kebabCase(seriesInfo[0].fieldValue)}/`}\n    />\n    <Text variant=\"h4\">\n      {`সিরিজ: ${seriesInfo[0].fieldValue} (${convertNumbers(\n        seriesInfo[0].totalCount\n      )} পর্ব)`}\n    </Text>\n    <PostList postNodes={postNodes} />\n  </MainLayout>\n);\n\nexport const pageQuery = graphql`\n  query PostsBySeries($series: String!) {\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { series: { eq: $series }, published: { eq: true } }\n      }\n      sort: { fields: frontmatter___date }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            series\n          }\n          fields {\n            slug\n          }\n        }\n      }\n      group(field: frontmatter___series) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport default SeriesPage;\n"],"sourceRoot":""}