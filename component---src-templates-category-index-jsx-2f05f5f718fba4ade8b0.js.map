{"version":3,"sources":["webpack:///./src/templates/Category/index.jsx","webpack:///./src/components/PostListing/index.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","className","title","config","siteTitle","React","Component","pageQuery","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","language","maxWidth","margin","mx","flexWrap","map","post","key","width","px","py","to"],"mappings":"mRAOqBA,E,gLACnBC,OAAA,WAAU,IACAC,EAAaC,KAAKC,MAAMC,YAAxBH,SACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MACpD,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,sBACb,kBAAC,IAAD,CACEC,MAAK,sBAAwBT,EAAxB,OAAuCU,IAAOC,YAErD,kBAAC,IAAD,CAAaP,UAAWA,O,GAVYQ,IAAMC,WAkBvCC,EAAS,c,uFCrBhBC,E,wLACJC,YAAA,WACE,IAAMC,EAAW,GAajB,OAZAhB,KAAKC,MAAME,UAAUc,SAAQ,SAAAC,GAC3BF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjClB,MAAOU,EAASG,KAAKI,YAAYjB,MACjCmB,KAAMT,EAASG,KAAKC,OAAOK,KAC3BC,QAASV,EAASG,KAAKO,QACvBC,WAAYX,EAASG,KAAKQ,WAC1BC,SAAUZ,EAASG,KAAKI,YAAYK,cAGjCd,G,EAGTlB,OAAA,WACE,IAAMkB,EAAWhB,KAAKe,cACtB,OACE,kBAAC,IAAD,CAAKgB,SAAU,IAAKC,OAAO,UACzB,kBAAC,IAAD,CAAMC,GAAI,CAAC,GAAI,GAAIC,SAAS,QAExBlB,EAASmB,KAAI,SAAAC,GAAI,OACf,kBAAC,IAAD,CAAKC,IAAKD,EAAK5B,MAAO8B,MAAO,CAAC,EAAG,EAAI,GAAIC,GAAI,EAAGC,GAAI,GAClD,kBAAC,OAAD,CAAMC,GAAIL,EAAKhB,MACb,kBAAC,IAAD,CAAaU,SAAUM,EAAKN,UAAWM,EAAK5B,e,GA3BpCG,IAAMC,WAqCjBE","file":"component---src-templates-category-index-jsx-2f05f5f718fba4ade8b0.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Layout from '../../components/Layout';\nimport PostListing from '../../components/PostListing';\nimport config from '../../../data/SiteConfig';\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className=\"category-container\">\n          <Helmet\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\n          />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: {\n        frontmatter: {\n          published: { eq: true }\n          categories: { in: [$category] }\n        }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            categories\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { SummaryCard, Box, Flex } from '../../views/components';\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n        language: postEdge.node.frontmatter.language,\n      });\n    });\n    return postList;\n  }\n\n  render() {\n    const postList = this.getPostList();\n    return (\n      <Box maxWidth={960} margin=\"0 auto\">\n        <Flex mx={[0, -2]} flexWrap=\"wrap\">\n          {/* Your post list here. */\n            postList.map(post => (\n              <Box key={post.title} width={[1, 1 / 3]} px={3} py={3}>\n                <Link to={post.path}>\n                  <SummaryCard language={post.language}>{post.title}</SummaryCard>\n                </Link>\n              </Box>\n          ))}\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}