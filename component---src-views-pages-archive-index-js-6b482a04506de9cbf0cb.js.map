{"version":3,"sources":["webpack:///./src/views/pages/Archive/index.js","webpack:///./src/views/layouts/MainLayout.js","webpack:///./src/views/layouts/ArticleLayout.js","webpack:///./src/components/PostListing/index.jsx"],"names":["pageQuery","BlogArchive","data","pageContext","postEdges","allMarkdownRemark","edges","variant","pageTitle","title","connect","theme","config","props","children","themes","name","content","SiteConfig","siteDescription","maxWidth","margin","p","xs","sm","minHeight","ArticleLayout","padding","PostListing","getPostList","postList","limit","this","forEach","postEdge","index","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","language","splice","render","mx","flexWrap","map","post","key","width","px","py","to","React","Component"],"mappings":"mHAAA,8GAkBaA,EAAS,YA4BPC,UAxCK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACrBC,EAAYF,EAAKG,kBAAkBC,MACzC,OACE,kBAAC,IAAD,CAAYC,QAAQ,SAClB,kBAAC,IAAD,CAAKC,UAAU,aACf,kBAAC,IAAD,CAAcC,MAAM,6BACpB,kBAAC,IAAD,CAAaL,UAAWA,IACxB,kBAAC,IAAD,CAAOD,YAAaA,O,4KC0BXO,iBAJS,SAAC,GAAD,MAAiB,CACvCC,MADsB,EAAGC,OACXD,SAGDD,EA7BI,SAACG,GAAW,IACrBC,EAAkCD,EAAlCC,SAAUH,EAAwBE,EAAxBF,MADU,EACcE,EAAjBN,eADG,MACO,GADP,EAG5B,OACE,kBAAC,IAAD,CAAeI,MAAOI,EAAOJ,EAAMK,OACjC,kBAAC,IAAD,MACA,oCACE,kBAAC,IAAD,KACE,0BAAMA,KAAK,cAAcC,QAASC,IAAWC,mBAE/C,kBAAC,IAAD,MACA,kBAAC,IAAD,CACEC,SAAsB,UAAZb,EAAsB,IAAM,OACtCc,OAAO,SACPC,EAAe,UAAZf,EAAsB,CAAEgB,GAAI,EAAGC,GAAI,GAAM,EAC5CC,UAAU,QAETX,GAEH,kBAAC,IAAD,Y,+LC1BR,IAMeY,EANO,SAAC,GAAD,IAAGZ,EAAH,EAAGA,SAAaD,E,oIAAhB,wBACpB,kBAAC,IAAD,eAAKO,SAAU,IAAKC,OAAO,SAASM,QAAS,CAAEJ,GAAI,EAAGC,GAAI,IAASX,GAChEC,I,oGCDCc,E,wLACJC,YAAA,WACE,IAAIC,EAAW,GACPC,EAAUC,KAAKnB,MAAfkB,MAgBR,OAfAC,KAAKnB,MAAMT,UAAU6B,SAAQ,SAACC,EAAUC,GACtCL,EAASM,KAAK,CACZC,KAAMH,EAASI,KAAKC,OAAOC,KAC3BC,KAAMP,EAASI,KAAKI,YAAYD,KAChCE,MAAOT,EAASI,KAAKI,YAAYC,MACjClC,MAAOyB,EAASI,KAAKI,YAAYjC,MACjCmC,KAAMV,EAASI,KAAKC,OAAOK,KAC3BC,QAASX,EAASI,KAAKO,QACvBC,WAAYZ,EAASI,KAAKQ,WAC1BC,SAAUb,EAASI,KAAKI,YAAYK,cAGpChB,IACFD,EAAWA,EAASkB,OAAO,EAAGjB,IAEzBD,G,EAGTmB,OAAA,WACE,IAAMnB,EAAWE,KAAKH,cAEtB,OACE,kBAAC,IAAD,CAAMqB,GAAI,CAAC,GAAI,GAAIC,SAAS,QAGxBrB,EAASsB,KAAI,SAACC,GAAD,OACX,kBAAC,IAAD,CAAKC,IAAKD,EAAK5C,MAAO8C,MAAO,CAAC,EAAG,EAAI,GAAIC,GAAI,EAAGC,GAAI,GAClD,kBAAC,OAAD,CAAMC,GAAIL,EAAKhB,MACb,kBAAC,IAAD,CAAaU,SAAUM,EAAKN,UAAWM,EAAK5C,c,GAhClCkD,IAAMC,WA0CjBhC","file":"component---src-views-pages-archive-index-js-6b482a04506de9cbf0cb.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport { MainLayout } from '../../layouts';\nimport PostListing from '../../../components/PostListing';\nimport { SectionTitle, SEO, Pager } from '../../components';\n\nconst BlogArchive = ({ data, pageContext }) => {\n  const postEdges = data.allMarkdownRemark.edges;\n  return (\n    <MainLayout variant=\"fixed\">\n      <SEO pageTitle=\"লেখাসমূহ\" />\n      <SectionTitle title=\"আমাদের প্রকাশিত লেখাসমূহ\" />\n      <PostListing postEdges={postEdges} />\n      <Pager pageContext={pageContext} />\n    </MainLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      skip: $skip\n      limit: $limit\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n            language\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogArchive;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { ThemeProvider } from 'styled-components';\nimport { connect } from 'react-redux';\nimport SiteConfig from '../../../data/SiteConfig';\nimport { Box, Footer, MainMenu } from '../components';\nimport * as themes from '../styles/themes';\nimport GlobalStyle from '../styles/GlobalStyles';\nimport '../styles/themes/material-oceanic.css';\n\nconst MainLayout = (props) => {\n  const { children, theme, variant = '' } = props;\n\n  return (\n    <ThemeProvider theme={themes[theme.name]}>\n      <GlobalStyle />\n      <>\n        <Helmet>\n          <meta name=\"description\" content={SiteConfig.siteDescription} />\n        </Helmet>\n        <MainMenu />\n        <Box\n          maxWidth={variant === 'fixed' ? 960 : '100%'}\n          margin=\"0 auto\"\n          p={variant === 'fixed' ? { xs: 3, sm: 4 } : 0}\n          minHeight=\"70vh\"\n        >\n          {children}\n        </Box>\n        <Footer />\n      </>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = ({ config }) => ({\n  theme: config.theme,\n});\n\nexport default connect(mapStateToProps)(MainLayout);\n","import React from 'react';\nimport { Box } from '../components';\n\nconst ArticleLayout = ({ children, ...props }) => (\n  <Box maxWidth={960} margin=\"0 auto\" padding={{ xs: 3, sm: 4 }} {...props}>\n    {children}\n  </Box>\n);\n\nexport default ArticleLayout;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { SummaryCard, Box, Flex } from '../../views/components';\n\nclass PostListing extends React.Component {\n  getPostList() {\n    let postList = [];\n    const { limit } = this.props;\n    this.props.postEdges.forEach((postEdge, index) => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n        language: postEdge.node.frontmatter.language,\n      });\n    });\n    if (limit) {\n      postList = postList.splice(0, limit);\n    }\n    return postList;\n  }\n\n  render() {\n    const postList = this.getPostList();\n\n    return (\n      <Flex mx={[0, -2]} flexWrap=\"wrap\">\n        {\n          /* Your post list here. */\n          postList.map((post) => (\n            <Box key={post.title} width={[1, 1 / 3]} px={3} py={3}>\n              <Link to={post.path}>\n                <SummaryCard language={post.language}>{post.title}</SummaryCard>\n              </Link>\n            </Box>\n          ))\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}